/*
   Implement regular expression matching with support for '.' and '*'.
'.' Matches any single character.
'*' Matches zero or more of the preceding element.

The matching should cover the entire input string (not partial).
The function prototype should be:
bool isMatch(const char *s, const char *p)
Some examples:
isMatch("aa","a") -> false
isMatch("aa","aa") -> true
isMatch("aaa","aa") -> false
isMatch("aa", "a*") -> true
isMatch("aa", ".*") -> true
isMatch("ab", ".*") -> true
isMatch("aab", "c*a*b") -> true
*/

#include <iostream>

class Solution {
public:
     bool isMatch(const char *s, const char *p) {
         if (!s || !p) return false;
	 const char *p1 = s;
	 const char *p2 = p;
         const char *next;
	 char starPrev = 0;
	 const char* starNext = NULL;
	 bool starFound = false;
	 while (*p1 && *p2) {
	     if (*p1 == *p2 || *p2 == '.') {
		 p1++;
		 p2++;
		 continue;
	     }
	     else if (*p2 == '*') {
		 starFound = true;
		 starPrev = (p2 == p) ? 0 : *(p2-1);
                 p1--; p2++;
		 starNext = p2;
                 next = p1;
		 continue;
	     }
	     else {
		 if (starFound && (*next == starPrev || starPrev == '.')) {
		     p1 = ++next;
		     p2 = starNext;
		     continue;
		 }
		 if (*(p2+1) && *(p2+1) == '*') {
		     p2 += 2;
		     continue;
		 }
		 else {
		     return false;
		 }
	     }
	 }

	 while (*p1) {
             if (starFound && (starPrev == *p1 || starPrev == '.')) {
                 p1++;
             }
             else {
                 return false;
             }
         }
	 while (*p2) {
	     if (*p2 == '*') {
		 p2++;
	     }
	     else if (*(p2+1) && *(p2+1) == '*') {
		 p2 += 2;
	     }
	     else {
		 return false;
	     }
	 }

         return true;
     }
};

int main() {
    Solution s;
    std::cout << "aa, a " << s.isMatch("aa","a") << std::endl;
    std::cout << "aa, aa " << s.isMatch("aa","aa") << std::endl;
    std::cout << "aaa, aa " << s.isMatch("aaa","aa") << std::endl;
    std::cout << "aa, a* " << s.isMatch("aa","a*") << std::endl;
    std::cout << "aa, .* " << s.isMatch("aa",".*") << std::endl;
    std::cout << "ab, .* " << s.isMatch("ab",".*") << std::endl;
    std::cout << "aab, c*a*b " << s.isMatch("aab","c*a*b") << std::endl;
    std::cout << "aaabbbbb, c*a*a.ab* " << s.isMatch("aaabbbbb","c*a*a.ab*") << std::endl;
    std::cout << "aaaaacbb, a*a.bb " << s.isMatch("aaaaacbb","a*a.bb") << std::endl;
}
